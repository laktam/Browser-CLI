(()=>{"use strict";function e(e,n){const t=document.getElementById("output");let o=`<div><span class="prompt">></span><span>${n.command}</span></div>`;o+=e,t.insertAdjacentHTML("beforeend",o)}const n=document.getElementById("terminal"),t=document.getElementById("terminal-container");!function(e,n){let t=0,o=0,i=Number(n.style.left.slice(0,-2)),d=Number(n.style.top.slice(0,-2)),a=!1;e.addEventListener("mousedown",(e=>{a=!0,t=e.clientX,o=e.clientY,i=Number(n.style.left.slice(0,-2)),d=Number(n.style.top.slice(0,-2)),console.log("mouse down")})),document.addEventListener("mouseup",(e=>{a=!1,console.log("mouse up")})),document.addEventListener("mousemove",(e=>{if(a){let a=e.clientX,l=e.clientY;console.log("x y",i,d),n.style.left=i+a-t+"px",n.style.top=d+l-o+"px",console.log("left and top",n.style.left,n.style.top)}}))}(document.getElementById("terminal-header"),t),function(){let e=document.getElementsByTagName("span");for(let n of e)n.addEventListener("mousedown",(e=>{e.stopPropagation()}))}(),chrome.runtime.onMessage.addListener((function(t,o,i){return"ls"==t.action?function(n){let t="";for(let e of n.data)t+=`<p style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;margin: 0px;">${e}</p>`;e(t,n)}(t):"find"==t.action?function(n){let t="";for(let e of n.data)t+=`<p style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">${e}</p>`;e(t,n)}(t):"pwd"==t.action?function(n){e(`<p style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">${n.data}</p>`,n)}(t):"clear"==t.action?function(e){e.querySelector("#output").innerHTML=""}(n):"help"==t.action?function(n){let{commandObj:t}=n;null==t.arguments&&e("<div>\nFor more information on a specific command, type HELP command-name\n<br><br>\n<div id='help-container'>\n<div id='help-commands'>\n    <div>cd</div>\n    <div>create</div>\n    <div>group</div>\n    <div>ungroup</div>\n    <div>rm</div>\n    <div>clear</div>\n</div>\n\n<div id='help-text'>\n    <div>move to a specific tab (use ls for tab indexes)</div>\n    <div>create a new tab with a given url</div>\n    <div>create a new group or add a tab to existing group</div>\n    <div>ungroup a group or remove a tab from a group</div>\n    <div>close a tab or group tabs</div>\n    <div>clear terminal</div>\n</div>\n</div>\n</div>\n",n)}(t):"no-command-found"==t.action?function(n){""==n.command?e("",n):e(`'${n.data}' is not recognized as a command`,n)}(t):e("<br>",t),n.querySelector("#commandInput").value="",n.scrollTo(0,n.scrollHeight),i(),!0}))})();